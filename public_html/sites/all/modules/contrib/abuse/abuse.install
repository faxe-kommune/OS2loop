<?php

/**
 * @file
 * Installs the abuse module
 */

/**
 * Implements hook_install().
 */
function abuse_install() {
  abuse_install_default_reasons();
}

/**
 * Implements hook_uninstall().
 */
function abuse_uninstall() {
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query("DELETE FROM {variable} WHERE name LIKE 'abuse_%'") */
  db_delete('variable')
  ->condition('name', 'abuse_%', 'LIKE')
  ->execute();
}

/**
 * Implements hook_schema().
 */
function abuse_schema() {
  $schema = array();
  $schema['abuse'] = array(
    'description' => 'A way to associate a flag for content by a user',
    'fields' => array(
      'aid' => array(
        'description' => 'ID of the flag',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'Original content ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Content Type',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 'node',
      ),
      'uid' => array(
        'description' => 'ID of user flagging content',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Name of user',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'mail' => array(
        'description' => 'Name of user',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'reason' => array(
        'description' => 'General reason for flagging content',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'body' => array(
        'description' => 'Text from user on what is wrong with content',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'valid' => array(
        'description' => 'Check that the flag is valid',
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'Timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('aid'),
    'indexes' => array(
      'oid_type' => array('oid', 'type'),
      'uid' => array('uid'),
    ),
  );

  $schema['abuse_warnings'] = array(
    'description' => 'A list of warnings that have been sent out to users for inappropriate content',
    'fields' => array(
      'oid' => array(
        'description' => 'Original content ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Content Type',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 'node',
      ),
      'uid' => array(
        'description' => 'Flagged content user ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'sent_by_uid' => array(
        'description' => 'Flagged content user ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'Timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'oid_type_created' => array('oid', 'type', 'created'),
      'uid' => array('uid'),
      'sent_by_uid' => array('sent_by_uid'),
    ),
  );
  $schema['abuse_status'] = array(
    'description' => 'Current status of a particular piece of content',
    'fields' => array(
      'oid' => array(
        'description' => 'Original content ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Content Type',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 'node',
      ),
      'assigned_to_uid' => array(
        'description' => 'Moderating user content has been assigned to',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Last timestamp of when content status was added/changed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Current status of the content',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('oid', 'type'),
    'indexes' => array(
      'assigned_to_uid_oid' => array('assigned_to_uid', 'oid'),
      'oid_type' => array('oid', 'type'),
      'status_oid' => array('status', 'oid'),
    ),
  );
  $schema['abuse_status_log'] = array(
    'description' => 'A log of the change to the status of a given content',
    'fields' => array(
      'oid' => array(
        'description' => 'Original content ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Content Type',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 'node',
      ),
      'uid' => array(
        'description' => 'Flagged content user ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status of the content',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'Timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
      'oid_type_timestamp' => array('oid', 'type', 'timestamp'),
    ),
  );
  $schema['abuse_reasons'] = array(
    'description' => 'A customizable reasons (categories) for flagging content on the site',
    'fields' => array(
      'arid' => array(
        'description' => 'Reason ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'reason' => array(
        'description' => 'Short sentence of reason for flagging content',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'other',
      ),
      'description' => array(
        'description' => 'A description for admins on what this reason is',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'argumentation' => array(
        'description' => 'Text that will be added to the email body',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('arid'),
  );

  return $schema;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function abuse_install_default_reasons() {
  $sql_template = "INSERT INTO {abuse_reasons} (reason, description, argumentation) VALUES ('%s', '%s', '%s')";

  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query($sql_template, "foul language", t('The user wrote very mean things'), t('Please refrain from writing such mean things')) */
  $result1 = $id = db_insert('abuse_reasons')
  ->fields(array(
    'reason' => "foul language",
    'description' => t('The user wrote very mean things'),
    'argumentation' => t('Please refrain from writing such mean things'),
  ))
  ->execute();
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query($sql_template, "adult themes", t('The user\'s wrote very explicit language'), t('Please refrain from writing such mean things')) */
  $result2 = $id = db_insert('abuse_reasons')
  ->fields(array(
    'reason' => "adult themes",
    'description' => t('The user\'s wrote very explicit language'),
    'argumentation' => t('Please refrain from writing such mean things'),
  ))
  ->execute();
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query($sql_template, "racist or sexist language", t('The user wrote very derogatory comments'), t('Please refrain from writing such mean things')) */
  $result3 = $id = db_insert('abuse_reasons')
  ->fields(array(
    'reason' => "racist or sexist language",
    'description' => t('The user wrote very derogatory comments'),
    'argumentation' => t('Please refrain from writing such mean things'),
  ))
  ->execute();
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query($sql_template, "contains private information", t('The user wrote about private information'), t('Please refrain from writing such mean things')) */
  $result4 = $id = db_insert('abuse_reasons')
  ->fields(array(
    'reason' => "contains private information",
    'description' => t('The user wrote about private information'),
    'argumentation' => t('Please refrain from writing such mean things'),
  ))
  ->execute();
  // TODO Please review the conversion of this statement to the D7 database API syntax.
  /* db_query($sql_template, "other", t('The user wrote about other types of mean things'), t('Please refrain from writing such mean things')) */
  $result5 = $id = db_insert('abuse_reasons')
  ->fields(array(
    'reason' => "other",
    'description' => t('The user wrote about other types of mean things'),
    'argumentation' => t('Please refrain from writing such mean things'),
  ))
  ->execute();

  if ($result1 && $result2 && $result3 && $result4 && $result5) {
    drupal_set_message(t('Abuse reason table installation was a success'));
  }
  else {
    drupal_set_message(t('Retry from the start (remove abuse sequence and abuse reasons table)'));
  }
}
